name: Backend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  
  test:
    name: Cargo test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: |
          cd backend
          cargo test --all --all-features --verbose  
       
  # Check formatting with rustfmt
  formatting:
    name: Cargo fmt
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable]
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v4
      # Ensure rustfmt is installed and setup problem matcher
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - run: |
          cd backend
          cargo fmt -- --check
          cargo clippy -- -D warnings 

      # - name: Toolchain Info
      #   run: |
      #     cargo --version --verbose
      #     rustc --version
      #     cargo clippy --version          
         

    

      # - name: Build
      #   run: |
      #     cd backend
      #     cargo build --release --verbose